<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LoRa: list.c Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LoRa
   &#160;<span id="projectnumber">1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('list_8c_source.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">list.c</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="list_8h.htm">list.h</a>&quot;</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div><div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="list_8h.htm#a3be976c2198f8b1047b8e1599634f523">   19</a></span>&#160;<a class="code" href="struct_list.htm">list_t</a>* <a class="code" href="list_8h.htm#a3be976c2198f8b1047b8e1599634f523">list_make</a>(<span class="keywordtype">void</span> *data) {</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <a class="code" href="struct_list.htm">list_t</a> *list = (<a class="code" href="struct_list.htm">list_t</a>*) malloc(<span class="keyword">sizeof</span>(<a class="code" href="struct_list.htm">list_t</a>));</div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    list-&gt;data = data;</div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    list-&gt;next = NULL;</div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <span class="keywordflow">return</span> list;</div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;}</div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div><div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="list_8h.htm#ae9d77cadebfbab27b40c3af6cb6c0d26">   34</a></span>&#160;<a class="code" href="struct_list.htm">list_t</a>* <a class="code" href="list_8h.htm#ae9d77cadebfbab27b40c3af6cb6c0d26">list_init</a>(<span class="keywordtype">void</span> *data, <span class="keywordtype">size_t</span> size) {</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <a class="code" href="struct_list.htm">list_t</a> *list = <a class="code" href="list_8h.htm#a3be976c2198f8b1047b8e1599634f523">list_make</a>(data);</div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    list-&gt;size = size;</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">return</span> list;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="list_8h.htm#a741b28bcbf9c8173a119cace16e647e4">   47</a></span>&#160;<a class="code" href="struct_list.htm">list_t</a>* <a class="code" href="list_8h.htm#a741b28bcbf9c8173a119cace16e647e4">list_last</a>(<a class="code" href="struct_list.htm">list_t</a> *list) {</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordflow">while</span>(list &amp;&amp; list-&gt;next) {</div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        list = list-&gt;next;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;        <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    }</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> list;</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="list_8h.htm#a2942dd782fc261b51056896722c2b07a">   64</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="list_8h.htm#a2942dd782fc261b51056896722c2b07a">list_add</a>(<a class="code" href="struct_list.htm">list_t</a> *root, <a class="code" href="struct_list.htm">list_t</a> *child) {</div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordflow">if</span>(!root) <span class="keywordflow">return</span>;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <a class="code" href="list_8h.htm#a741b28bcbf9c8173a119cace16e647e4">list_last</a>(child)-&gt;next = root-&gt;next;</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    root-&gt;next = child;</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div><div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;</div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="list_8h.htm#a36505368b3f9d97311f7d480265a3d8f">   82</a></span>&#160;<a class="code" href="struct_list.htm">list_t</a>* <a class="code" href="list_8h.htm#a36505368b3f9d97311f7d480265a3d8f">list_find</a>(<a class="code" href="struct_list.htm">list_t</a> *list, <a class="code" href="struct_list.htm">list_t</a> *node) {</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keywordflow">while</span>(list &amp;&amp; list != node &amp;&amp; list-&gt;next != node) {</div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        list = list-&gt;next;</div><div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    }</div><div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> list;</div><div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;</div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="list_8h.htm#abcf00125c7cccca84bfd8d706ab5c9c3">  101</a></span>&#160;<a class="code" href="struct_list.htm">list_t</a>* <a class="code" href="list_8h.htm#abcf00125c7cccca84bfd8d706ab5c9c3">list_del</a>(<a class="code" href="struct_list.htm">list_t</a> **node) {</div><div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">if</span>(!node || !*node) {</div><div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="keywordflow">return</span> NULL;</div><div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div><div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <a class="code" href="struct_list.htm">list_t</a> *temp = *node;</div><div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    *node = temp-&gt;next;</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">return</span> temp;</div><div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div><div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="list_8h.htm#a9b83061de980c06aa45068a00a61d966">  118</a></span>&#160;<a class="code" href="struct_list.htm">list_t</a>* <a class="code" href="list_8h.htm#a9b83061de980c06aa45068a00a61d966">list_has</a>(<a class="code" href="struct_list.htm">list_t</a> *list, <span class="keywordtype">void</span> *data) {</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">while</span>(list &amp;&amp; list-&gt;data != data) {</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        list = list-&gt;next;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keywordflow">return</span> list;</div><div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div><div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;</div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="list_8h.htm#a7bcb740adc060ffbf5b97187a559df89">  133</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="list_8h.htm#a7bcb740adc060ffbf5b97187a559df89">list_size</a>(<a class="code" href="struct_list.htm">list_t</a> *list) {</div><div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> size = 0;</div><div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">while</span>(list != NULL) {</div><div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        list = list-&gt;next;</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    }</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">return</span> size;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="list_8h.htm#a47c830a1f1e7028a5cebae0c1b156421">  152</a></span>&#160;<span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="list_8h.htm#a47c830a1f1e7028a5cebae0c1b156421">list_array</a>(<a class="code" href="struct_list.htm">list_t</a> *list, <span class="keywordtype">void</span> **target) {</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> length = <a class="code" href="list_8h.htm#a7bcb740adc060ffbf5b97187a559df89">list_size</a>(list);</div><div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    *target = malloc(length * <span class="keyword">sizeof</span>(<span class="keywordtype">void</span>*));</div><div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i&lt;length &amp;&amp; list != NULL; i++) {</div><div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        target[i] = list-&gt;data;</div><div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        list = list-&gt;next;</div><div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">return</span> length;</div><div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div><div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;</div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="list_8h.htm#a2f71552f38ce81b383858b380f78052e">  170</a></span>&#160;<a class="code" href="struct_list.htm">list_t</a>* <a class="code" href="list_8h.htm#a2f71552f38ce81b383858b380f78052e">list_pop</a>(<a class="code" href="struct_list.htm">list_t</a> **list) {</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">if</span>(!list) {</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        <span class="keywordflow">return</span> NULL;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    }</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <a class="code" href="struct_list.htm">list_t</a> *temp = *list;</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    *list = temp-&gt;next;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordflow">return</span> temp;</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;}</div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;</div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="list_8h.htm#addeb181aaf428c5d8309e94c1fe4f0c7">  188</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="list_8h.htm#addeb181aaf428c5d8309e94c1fe4f0c7">list_push</a>(<a class="code" href="struct_list.htm">list_t</a> **list, <a class="code" href="struct_list.htm">list_t</a> *node) {</div><div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">if</span>(!list) {</div><div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    }</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span>(!*list) {</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;        *list = node;</div><div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    }</div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <a class="code" href="list_8h.htm#a741b28bcbf9c8173a119cace16e647e4">list_last</a>(node)-&gt;next = *list;</div><div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    *list = node;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;</div><div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="list_8h.htm#a29886c667fa6c36faf4a785440ddd541">  209</a></span>&#160;<a class="code" href="struct_list.htm">list_t</a>* <a class="code" href="list_8h.htm#a29886c667fa6c36faf4a785440ddd541">list_get</a>(<a class="code" href="struct_list.htm">list_t</a> *list, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> n) {</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">for</span>(<span class="keywordtype">int</span> i=0; i&lt;n &amp;&amp; list != NULL; i++) {</div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;        list = list-&gt;next;</div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;        <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordflow">return</span> list;</div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div><div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;</div><div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="list_8h.htm#a2343436c06685c2ab9fc334e2d775e46">  227</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="list_8h.htm#a2343436c06685c2ab9fc334e2d775e46">list_each</a>(<a class="code" href="struct_list.htm">list_t</a> *list, <span class="keywordtype">void</span> (*<span class="keyword">function</span>)(<span class="keywordtype">void</span>*, <span class="keywordtype">size_t</span>)) {</div><div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    <span class="keywordflow">while</span>(list) {</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;        <span class="keywordflow">if</span>(<span class="keyword">function</span> &amp;&amp; list-&gt;data) {</div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;            (*function)(list-&gt;data, list-&gt;size);</div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;        }</div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;        list = list-&gt;next;</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">continue</span>;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    }</div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="list_8h.htm#a8781cf7b693b7c465525e3cf5f2a5eed">  247</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="list_8h.htm#a8781cf7b693b7c465525e3cf5f2a5eed">list_clean</a>(<a class="code" href="struct_list.htm">list_t</a> **list, <span class="keywordtype">bool</span> full) {</div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    <span class="keywordflow">if</span>(!list || !*list) {</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">return</span>;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    <span class="keywordflow">if</span>( (*list)-&gt;next ) {</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <a class="code" href="list_8h.htm#a8781cf7b693b7c465525e3cf5f2a5eed">list_clean</a>( &amp;(*list)-&gt;next, full );</div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;    <span class="keywordflow">if</span>(full) {</div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;        free((*list)-&gt;data);</div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    }</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    free(*list);</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    *list = NULL;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    <span class="keywordflow">return</span>;</div><div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div><div class="ttc" id="list_8h_htm_a2942dd782fc261b51056896722c2b07a"><div class="ttname"><a href="list_8h.htm#a2942dd782fc261b51056896722c2b07a">list_add</a></div><div class="ttdeci">void list_add(list_t *, list_t *)</div><div class="ttdoc">adds item to the list, adds to next of current. current next becomes last of child. which means a -&gt; b -&gt; c and 1 -&gt; 2 -&gt; 3 then adding to &amp;#39;b&amp;#39; yields to a -&gt; b -&gt; 1 -&gt; 2 -&gt; 3 -&gt; c </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00064">list.c:64</a></div></div>
<div class="ttc" id="list_8h_htm_addeb181aaf428c5d8309e94c1fe4f0c7"><div class="ttname"><a href="list_8h.htm#addeb181aaf428c5d8309e94c1fe4f0c7">list_push</a></div><div class="ttdeci">void list_push(list_t **, list_t *)</div><div class="ttdoc">inserts given item to top of list </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00188">list.c:188</a></div></div>
<div class="ttc" id="list_8h_htm_a8781cf7b693b7c465525e3cf5f2a5eed"><div class="ttname"><a href="list_8h.htm#a8781cf7b693b7c465525e3cf5f2a5eed">list_clean</a></div><div class="ttdeci">void list_clean(list_t **, bool)</div><div class="ttdoc">cleans up the list </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00247">list.c:247</a></div></div>
<div class="ttc" id="list_8h_htm_a2f71552f38ce81b383858b380f78052e"><div class="ttname"><a href="list_8h.htm#a2f71552f38ce81b383858b380f78052e">list_pop</a></div><div class="ttdeci">list_t * list_pop(list_t **)</div><div class="ttdoc">removes top item list </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00170">list.c:170</a></div></div>
<div class="ttc" id="list_8h_htm_a2343436c06685c2ab9fc334e2d775e46"><div class="ttname"><a href="list_8h.htm#a2343436c06685c2ab9fc334e2d775e46">list_each</a></div><div class="ttdeci">void list_each(list_t *, void(*)(void *, size_t))</div><div class="ttdoc">executes callback function for every item of the list </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00227">list.c:227</a></div></div>
<div class="ttc" id="list_8h_htm_a3be976c2198f8b1047b8e1599634f523"><div class="ttname"><a href="list_8h.htm#a3be976c2198f8b1047b8e1599634f523">list_make</a></div><div class="ttdeci">list_t * list_make(void *)</div><div class="ttdoc">creates new list item with given data </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00019">list.c:19</a></div></div>
<div class="ttc" id="list_8h_htm_a36505368b3f9d97311f7d480265a3d8f"><div class="ttname"><a href="list_8h.htm#a36505368b3f9d97311f7d480265a3d8f">list_find</a></div><div class="ttdeci">list_t * list_find(list_t *, list_t *)</div><div class="ttdoc">finds given node in given list returns node before it to actively change next </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00082">list.c:82</a></div></div>
<div class="ttc" id="list_8h_htm"><div class="ttname"><a href="list_8h.htm">list.h</a></div></div>
<div class="ttc" id="list_8h_htm_a7bcb740adc060ffbf5b97187a559df89"><div class="ttname"><a href="list_8h.htm#a7bcb740adc060ffbf5b97187a559df89">list_size</a></div><div class="ttdeci">unsigned long list_size(list_t *)</div><div class="ttdoc">gets size/length of the list from current point </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00133">list.c:133</a></div></div>
<div class="ttc" id="list_8h_htm_ae9d77cadebfbab27b40c3af6cb6c0d26"><div class="ttname"><a href="list_8h.htm#ae9d77cadebfbab27b40c3af6cb6c0d26">list_init</a></div><div class="ttdeci">list_t * list_init(void *, size_t)</div><div class="ttdoc">initializes list with size </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00034">list.c:34</a></div></div>
<div class="ttc" id="struct_list_htm"><div class="ttname"><a href="struct_list.htm">List</a></div><div class="ttdef"><b>Definition:</b> <a href="list_8h_source.htm#l00020">list.h:20</a></div></div>
<div class="ttc" id="list_8h_htm_abcf00125c7cccca84bfd8d706ab5c9c3"><div class="ttname"><a href="list_8h.htm#abcf00125c7cccca84bfd8d706ab5c9c3">list_del</a></div><div class="ttdeci">list_t * list_del(list_t **)</div><div class="ttdoc">deletes node from the list requires reference to node-ptr so from a -&gt; b -&gt; c to remove &amp;#39;b&amp;#39; do del(&amp;a...</div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00101">list.c:101</a></div></div>
<div class="ttc" id="list_8h_htm_a9b83061de980c06aa45068a00a61d966"><div class="ttname"><a href="list_8h.htm#a9b83061de980c06aa45068a00a61d966">list_has</a></div><div class="ttdeci">list_t * list_has(list_t *, void *)</div><div class="ttdoc">gets list item if list contains specified data reference. </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00118">list.c:118</a></div></div>
<div class="ttc" id="list_8h_htm_a29886c667fa6c36faf4a785440ddd541"><div class="ttname"><a href="list_8h.htm#a29886c667fa6c36faf4a785440ddd541">list_get</a></div><div class="ttdeci">list_t * list_get(list_t *, unsigned long)</div><div class="ttdoc">gets Nth item from list </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00209">list.c:209</a></div></div>
<div class="ttc" id="list_8h_htm_a741b28bcbf9c8173a119cace16e647e4"><div class="ttname"><a href="list_8h.htm#a741b28bcbf9c8173a119cace16e647e4">list_last</a></div><div class="ttdeci">list_t * list_last(list_t *)</div><div class="ttdoc">gets last item of the list </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00047">list.c:47</a></div></div>
<div class="ttc" id="list_8h_htm_a47c830a1f1e7028a5cebae0c1b156421"><div class="ttname"><a href="list_8h.htm#a47c830a1f1e7028a5cebae0c1b156421">list_array</a></div><div class="ttdeci">unsigned long list_array(list_t *, void **)</div><div class="ttdoc">converts list to array </div><div class="ttdef"><b>Definition:</b> <a href="list_8c_source.htm#l00152">list.c:152</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>list.c</b></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
