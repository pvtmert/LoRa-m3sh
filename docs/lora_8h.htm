<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.13"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>LoRa: lora.h File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">LoRa
   &#160;<span id="projectnumber">1</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.13 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
$(function() {
  initMenu('',true,false,'search.php','Search');
  $(document).ready(function() { init_search(); });
});
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('lora_8h.htm','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Data Structures</a> &#124;
<a href="#define-members">Macros</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">lora.h File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;stdio.h&gt;</code><br />
<code>#include &lt;stdint.h&gt;</code><br />
<code>#include &lt;stdlib.h&gt;</code><br />
<code>#include &lt;stdarg.h&gt;</code><br />
<code>#include &lt;stdbool.h&gt;</code><br />
<code>#include &lt;string.h&gt;</code><br />
<code>#include &lt;unistd.h&gt;</code><br />
<code>#include &lt;math.h&gt;</code><br />
<code>#include &lt;time.h&gt;</code><br />
<code>#include &quot;<a class="el" href="list_8h_source.htm">list.h</a>&quot;</code><br />
<code>#include &quot;device.h&quot;</code><br />
</div>
<p><a href="lora_8h_source.htm">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Data Structures</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_packet.htm">Packet</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">packet type definition. defines type 'packet' uses 'packed' attribute to send minimum number of bytes over network to maintain high throughput and low redundancy  <a href="struct_packet.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_node.htm">Node</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="struct_link.htm">Link</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Macros</h2></td></tr>
<tr class="memitem:acae9ba6db0496fbd5b53f1f823bbce64"><td class="memItemLeft" align="right" valign="top"><a id="acae9ba6db0496fbd5b53f1f823bbce64"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>_LORA_PKG_SIZE_</b>&#160;&#160;&#160;230</td></tr>
<tr class="separator:acae9ba6db0496fbd5b53f1f823bbce64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdc5ef32431f4e119cdbf777c43a4423"><td class="memItemLeft" align="right" valign="top"><a id="afdc5ef32431f4e119cdbf777c43a4423"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>_LORA_MAX_CONN_</b>&#160;&#160;&#160;128</td></tr>
<tr class="separator:afdc5ef32431f4e119cdbf777c43a4423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad157ff757965b61fcae9fa267c685310"><td class="memItemLeft" align="right" valign="top"><a id="ad157ff757965b61fcae9fa267c685310"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><b>_LORA_MAGIC_</b>&#160;&#160;&#160;((0x4d &lt;&lt; 0) | (0x33 &lt;&lt; 8) | (0x53 &lt;&lt; 16) | (0x48 &lt;&lt; 24))</td></tr>
<tr class="separator:ad157ff757965b61fcae9fa267c685310"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:ae9f2c0d2a6bd0be19a12dba62f2277b2"><td class="memItemLeft" align="right" valign="top">typedef enum <a class="el" href="lora_8h.htm#a0a80a7bc045affcf10846075b88cbca0">PacketType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#ae9f2c0d2a6bd0be19a12dba62f2277b2">packet_type_t</a></td></tr>
<tr class="separator:ae9f2c0d2a6bd0be19a12dba62f2277b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad619c51c87c2fdff000cf95f9d5f2768"><td class="memItemLeft" align="right" valign="top">typedef enum <a class="el" href="lora_8h.htm#a1c1b13fe89afd152373e6758762c5f7f">NodeFlag</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#ad619c51c87c2fdff000cf95f9d5f2768">node_flag_t</a></td></tr>
<tr class="separator:ad619c51c87c2fdff000cf95f9d5f2768"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ebd1e228aedd29e18d3dffa6f49e75a"><td class="memItemLeft" align="right" valign="top">typedef uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a9ebd1e228aedd29e18d3dffa6f49e75a">addr_t</a></td></tr>
<tr class="separator:a9ebd1e228aedd29e18d3dffa6f49e75a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cae7cd995d97ba264d327108bd98863"><td class="memItemLeft" align="right" valign="top"><a id="a3cae7cd995d97ba264d327108bd98863"></a>
typedef struct <a class="el" href="struct_node.htm">Node</a>&#160;</td><td class="memItemRight" valign="bottom"><b>node_t</b></td></tr>
<tr class="separator:a3cae7cd995d97ba264d327108bd98863"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecd9a1f18e6238b4963ea72e7e0760dc"><td class="memItemLeft" align="right" valign="top"><a id="aecd9a1f18e6238b4963ea72e7e0760dc"></a>
typedef struct <a class="el" href="struct_link.htm">Link</a>&#160;</td><td class="memItemRight" valign="bottom"><b>link_t</b></td></tr>
<tr class="separator:aecd9a1f18e6238b4963ea72e7e0760dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:a0a80a7bc045affcf10846075b88cbca0"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a0a80a7bc045affcf10846075b88cbca0">PacketType</a> { <br />
&#160;&#160;<b>PKG_TYPE_NONE</b> = 0, 
<b>PKG_TYPE_OK</b> = 1 &lt;&lt; 0, 
<b>PKG_TYPE_ACK</b> = 1 &lt;&lt; 1, 
<b>PKG_TYPE_RLY</b> = 1 &lt;&lt; 2, 
<br />
&#160;&#160;<b>PKG_TYPE_404</b> = 1 &lt;&lt; 3, 
<b>PKG_TYPE_FIND</b> = 1 &lt;&lt; 4, 
<b>PKG_TYPE_CONT</b> = 1 &lt;&lt; 5, 
<b>PKG_TYPE_RES3</b> = 1 &lt;&lt; 6, 
<br />
&#160;&#160;<b>PKG_TYPE_RES4</b> = 1 &lt;&lt; 7, 
<b>PKG_TYPE_BITS</b> = 8
<br />
 }</td></tr>
<tr class="separator:a0a80a7bc045affcf10846075b88cbca0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c1b13fe89afd152373e6758762c5f7f"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a1c1b13fe89afd152373e6758762c5f7f">NodeFlag</a> { <br />
&#160;&#160;<b>NODE_FLAG_NONE</b> = 0, 
<b>NODE_FLAG_FREE</b> = 1 &lt;&lt; 0, 
<b>NODE_FLAG_LOCK</b> = 1 &lt;&lt; 1, 
<b>NODE_FLAG_A</b> = 1 &lt;&lt; 2, 
<br />
&#160;&#160;<b>NODE_FLAG_B</b> = 1 &lt;&lt; 3, 
<b>NODE_FLAG_C</b> = 1 &lt;&lt; 4, 
<b>NODE_FLAG_D</b> = 1 &lt;&lt; 5, 
<b>NODE_FLAG_E</b> = 1 &lt;&lt; 6, 
<br />
&#160;&#160;<b>NODE_FLAG_F</b> = 1 &lt;&lt; 7, 
<b>NODE_FLAG_BITS</b> = 8
<br />
 }</td></tr>
<tr class="separator:a1c1b13fe89afd152373e6758762c5f7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:af9294c9ba0744e3ba916d8c04d488609"><td class="memItemLeft" align="right" valign="top"><a id="af9294c9ba0744e3ba916d8c04d488609"></a>
struct <a class="el" href="struct_packet.htm">Packet</a>&#160;</td><td class="memItemRight" valign="bottom"><b>__attribute__</b> ((packed)) packet_t</td></tr>
<tr class="separator:af9294c9ba0744e3ba916d8c04d488609"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6dc200e1aeb204ea8bf141ff7d98c2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a7e6dc200e1aeb204ea8bf141ff7d98c2">print</a> (void *, size_t)</td></tr>
<tr class="memdesc:a7e6dc200e1aeb204ea8bf141ff7d98c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">prints given object according to its size uses switch statement to find out object type  <a href="#a7e6dc200e1aeb204ea8bf141ff7d98c2">More...</a><br /></td></tr>
<tr class="separator:a7e6dc200e1aeb204ea8bf141ff7d98c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14915245369a82c7a9239f2096c5b8e5"><td class="memItemLeft" align="right" valign="top">packet_t *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a14915245369a82c7a9239f2096c5b8e5">packet_make</a> (const <a class="el" href="lora_8h.htm#a9ebd1e228aedd29e18d3dffa6f49e75a">addr_t</a>, const <a class="el" href="lora_8h.htm#a9ebd1e228aedd29e18d3dffa6f49e75a">addr_t</a>, const <a class="el" href="lora_8h.htm#ae9f2c0d2a6bd0be19a12dba62f2277b2">packet_type_t</a>, const uint16_t)</td></tr>
<tr class="memdesc:a14915245369a82c7a9239f2096c5b8e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">create a new packet.  <a href="#a14915245369a82c7a9239f2096c5b8e5">More...</a><br /></td></tr>
<tr class="separator:a14915245369a82c7a9239f2096c5b8e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa685779d9e779d8501eb8349e68501e2"><td class="memItemLeft" align="right" valign="top"><a id="aa685779d9e779d8501eb8349e68501e2"></a>
uint32_t&#160;</td><td class="memItemRight" valign="bottom"><b>packet_prepare</b> (packet_t *, const uint8_t, const void *)</td></tr>
<tr class="separator:aa685779d9e779d8501eb8349e68501e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b50acafcfc2f33c0ab0ddae127eb567"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a4b50acafcfc2f33c0ab0ddae127eb567">packet_getsum</a> (packet_t *)</td></tr>
<tr class="memdesc:a4b50acafcfc2f33c0ab0ddae127eb567"><td class="mdescLeft">&#160;</td><td class="mdescRight">prepare packet for sending. this includes setting data it also calculates checksum  <a href="#a4b50acafcfc2f33c0ab0ddae127eb567">More...</a><br /></td></tr>
<tr class="separator:a4b50acafcfc2f33c0ab0ddae127eb567"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fe9b1b67904ad7e2019cb3aa3214508"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a1fe9b1b67904ad7e2019cb3aa3214508">packet_verify</a> (packet_t *)</td></tr>
<tr class="memdesc:a1fe9b1b67904ad7e2019cb3aa3214508"><td class="mdescLeft">&#160;</td><td class="mdescRight">check packet for validity  <a href="#a1fe9b1b67904ad7e2019cb3aa3214508">More...</a><br /></td></tr>
<tr class="separator:a1fe9b1b67904ad7e2019cb3aa3214508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93a53ad6e9c2925ccfd9bcabf895ba1e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_node.htm">node_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a93a53ad6e9c2925ccfd9bcabf895ba1e">node_make</a> (const uint64_t, const bool)</td></tr>
<tr class="memdesc:a93a53ad6e9c2925ccfd9bcabf895ba1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">creates a 'node' which is a virtual device state  <a href="#a93a53ad6e9c2925ccfd9bcabf895ba1e">More...</a><br /></td></tr>
<tr class="separator:a93a53ad6e9c2925ccfd9bcabf895ba1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39a257065dfbdebf8434ed81baf363a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a39a257065dfbdebf8434ed81baf363a6">node_deliver</a> (<a class="el" href="struct_node.htm">node_t</a> *, packet_t *)</td></tr>
<tr class="memdesc:a39a257065dfbdebf8434ed81baf363a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">called when node receives packet from link  <a href="#a39a257065dfbdebf8434ed81baf363a6">More...</a><br /></td></tr>
<tr class="separator:a39a257065dfbdebf8434ed81baf363a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a243f0af1c62ebb32f4047df438e9d79b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a243f0af1c62ebb32f4047df438e9d79b">node_connect_ptr</a> (<a class="el" href="struct_node.htm">node_t</a> *, unsigned, <a class="el" href="struct_link.htm">link_t</a> **)</td></tr>
<tr class="memdesc:a243f0af1c62ebb32f4047df438e9d79b"><td class="mdescLeft">&#160;</td><td class="mdescRight">connect nodes via count number of links  <a href="#a243f0af1c62ebb32f4047df438e9d79b">More...</a><br /></td></tr>
<tr class="separator:a243f0af1c62ebb32f4047df438e9d79b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9a8ef3651fe28848dc7e1cb664fb9c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#aa9a8ef3651fe28848dc7e1cb664fb9c6">node_connect_va</a> (<a class="el" href="struct_node.htm">node_t</a> *, unsigned, va_list)</td></tr>
<tr class="memdesc:aa9a8ef3651fe28848dc7e1cb664fb9c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">connect nodes via count number of links links must be passed as a va_list typed variable argument list  <a href="#aa9a8ef3651fe28848dc7e1cb664fb9c6">More...</a><br /></td></tr>
<tr class="separator:aa9a8ef3651fe28848dc7e1cb664fb9c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ee19a53b6dbc425fd3fb038502c4503"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a4ee19a53b6dbc425fd3fb038502c4503">node_connect</a> (<a class="el" href="struct_node.htm">node_t</a> *, unsigned,...)</td></tr>
<tr class="memdesc:a4ee19a53b6dbc425fd3fb038502c4503"><td class="mdescLeft">&#160;</td><td class="mdescRight">connect nodes via count number of links. you should have count number of links after count arg example: node_connect(node, 3, link1, link2, link3)  <a href="#a4ee19a53b6dbc425fd3fb038502c4503">More...</a><br /></td></tr>
<tr class="separator:a4ee19a53b6dbc425fd3fb038502c4503"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a090f66a52462c020295a54569d00ca7a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="struct_link.htm">link_t</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a090f66a52462c020295a54569d00ca7a">link_make</a> (unsigned long, unsigned)</td></tr>
<tr class="memdesc:a090f66a52462c020295a54569d00ca7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">allocate and initialize link object with given latency and deviation  <a href="#a090f66a52462c020295a54569d00ca7a">More...</a><br /></td></tr>
<tr class="separator:a090f66a52462c020295a54569d00ca7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a989284e478259382e177b5ed317c2e78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a989284e478259382e177b5ed317c2e78">link_assign_ptr</a> (<a class="el" href="struct_link.htm">link_t</a> *, unsigned, <a class="el" href="struct_node.htm">node_t</a> **)</td></tr>
<tr class="memdesc:a989284e478259382e177b5ed317c2e78"><td class="mdescLeft">&#160;</td><td class="mdescRight">assign nodes to a link via ptr to node-ptr  <a href="#a989284e478259382e177b5ed317c2e78">More...</a><br /></td></tr>
<tr class="separator:a989284e478259382e177b5ed317c2e78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50d08e611d8db36e0cb995af18d1ae0b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a50d08e611d8db36e0cb995af18d1ae0b">link_assign_va</a> (<a class="el" href="struct_link.htm">link_t</a> *, unsigned, va_list)</td></tr>
<tr class="memdesc:a50d08e611d8db36e0cb995af18d1ae0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">assign nodes to a link via variable argument list of nodes  <a href="#a50d08e611d8db36e0cb995af18d1ae0b">More...</a><br /></td></tr>
<tr class="separator:a50d08e611d8db36e0cb995af18d1ae0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58d51aa671906dd8a4d90e5774b96624"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#a58d51aa671906dd8a4d90e5774b96624">link_assign</a> (<a class="el" href="struct_link.htm">link_t</a> *, unsigned,...)</td></tr>
<tr class="memdesc:a58d51aa671906dd8a4d90e5774b96624"><td class="mdescLeft">&#160;</td><td class="mdescRight">assign count number of nodes to a link via variable sized arguments  <a href="#a58d51aa671906dd8a4d90e5774b96624">More...</a><br /></td></tr>
<tr class="separator:a58d51aa671906dd8a4d90e5774b96624"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9bb62a5a3ea6f89d117122dd32b058d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lora_8h.htm#ab9bb62a5a3ea6f89d117122dd32b058d">link_deliver</a> (<a class="el" href="struct_link.htm">link_t</a> *, packet_t *)</td></tr>
<tr class="memdesc:ab9bb62a5a3ea6f89d117122dd32b058d"><td class="mdescLeft">&#160;</td><td class="mdescRight">causes link to publish packet to connected nodes called when link got a packet  <a href="#ab9bb62a5a3ea6f89d117122dd32b058d">More...</a><br /></td></tr>
<tr class="separator:ab9bb62a5a3ea6f89d117122dd32b058d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a57f54349f4fd1cbbb52058812e146af2"><td class="memItemLeft" align="right" valign="top"><a id="a57f54349f4fd1cbbb52058812e146af2"></a>
uint32_t&#160;</td><td class="memItemRight" valign="bottom"><b>magic</b></td></tr>
<tr class="separator:a57f54349f4fd1cbbb52058812e146af2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa482bc33779a87f57ab8efc2c1680c48"><td class="memItemLeft" align="right" valign="top"><a id="aa482bc33779a87f57ab8efc2c1680c48"></a>
uint32_t&#160;</td><td class="memItemRight" valign="bottom"><b>checksum</b></td></tr>
<tr class="separator:aa482bc33779a87f57ab8efc2c1680c48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1d3dc7e12eaf1b0bf0ac362042d53db"><td class="memItemLeft" align="right" valign="top"><a id="ad1d3dc7e12eaf1b0bf0ac362042d53db"></a>
<a class="el" href="lora_8h.htm#a9ebd1e228aedd29e18d3dffa6f49e75a">addr_t</a>&#160;</td><td class="memItemRight" valign="bottom"><b>src</b></td></tr>
<tr class="separator:ad1d3dc7e12eaf1b0bf0ac362042d53db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55ff108a157014fc509b3a0ac95671da"><td class="memItemLeft" align="right" valign="top"><a id="a55ff108a157014fc509b3a0ac95671da"></a>
<a class="el" href="lora_8h.htm#a9ebd1e228aedd29e18d3dffa6f49e75a">addr_t</a>&#160;</td><td class="memItemRight" valign="bottom"><b>dst</b></td></tr>
<tr class="separator:a55ff108a157014fc509b3a0ac95671da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a714cf733eae0c88f1cc9c9b2e6060f1a"><td class="memItemLeft" align="right" valign="top"><a id="a714cf733eae0c88f1cc9c9b2e6060f1a"></a>
uint16_t&#160;</td><td class="memItemRight" valign="bottom"><b>ttl</b></td></tr>
<tr class="separator:a714cf733eae0c88f1cc9c9b2e6060f1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2b3adeb2a67e656ff030b56727fd0ac"><td class="memItemLeft" align="right" valign="top"><a id="ab2b3adeb2a67e656ff030b56727fd0ac"></a>
uint8_t&#160;</td><td class="memItemRight" valign="bottom"><b>length</b></td></tr>
<tr class="separator:ab2b3adeb2a67e656ff030b56727fd0ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4802174f2c45ce904fc2c56907ccc9d4"><td class="memItemLeft" align="right" valign="top"><a id="a4802174f2c45ce904fc2c56907ccc9d4"></a>
<a class="el" href="lora_8h.htm#ae9f2c0d2a6bd0be19a12dba62f2277b2">packet_type_t</a>&#160;</td><td class="memItemRight" valign="bottom"><b>type</b></td></tr>
<tr class="separator:a4802174f2c45ce904fc2c56907ccc9d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a734a72a7f88a7a454382b48dbdb827c5"><td class="memItemLeft" align="right" valign="top"><a id="a734a72a7f88a7a454382b48dbdb827c5"></a>
uint32_t&#160;</td><td class="memItemRight" valign="bottom"><b>data_crc</b></td></tr>
<tr class="separator:a734a72a7f88a7a454382b48dbdb827c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0a33d41449d4f0324d50bf1aa2e35b4"><td class="memItemLeft" align="right" valign="top"><a id="ae0a33d41449d4f0324d50bf1aa2e35b4"></a>
uint8_t&#160;</td><td class="memItemRight" valign="bottom"><b>data</b> [_LORA_PKG_SIZE_]</td></tr>
<tr class="separator:ae0a33d41449d4f0324d50bf1aa2e35b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>includes all functions required for network simulation </p>

<p class="definition">Definition in file <a class="el" href="lora_8h_source.htm">lora.h</a>.</p>
</div><h2 class="groupheader">Typedef Documentation</h2>
<a id="a9ebd1e228aedd29e18d3dffa6f49e75a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ebd1e228aedd29e18d3dffa6f49e75a">&#9670;&nbsp;</a></span>addr_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef uint32_t <a class="el" href="lora_8h.htm#a9ebd1e228aedd29e18d3dffa6f49e75a">addr_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>default addressing type </p>

<p class="definition">Definition at line <a class="el" href="lora_8h_source.htm#l00062">62</a> of file <a class="el" href="lora_8h_source.htm">lora.h</a>.</p>

</div>
</div>
<a id="ad619c51c87c2fdff000cf95f9d5f2768"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad619c51c87c2fdff000cf95f9d5f2768">&#9670;&nbsp;</a></span>node_flag_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef enum <a class="el" href="lora_8h.htm#a1c1b13fe89afd152373e6758762c5f7f">NodeFlag</a>  <a class="el" href="lora_8h.htm#ad619c51c87c2fdff000cf95f9d5f2768">node_flag_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>node flag enum </p>

</div>
</div>
<a id="ae9f2c0d2a6bd0be19a12dba62f2277b2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9f2c0d2a6bd0be19a12dba62f2277b2">&#9670;&nbsp;</a></span>packet_type_t</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef enum <a class="el" href="lora_8h.htm#a0a80a7bc045affcf10846075b88cbca0">PacketType</a>  <a class="el" href="lora_8h.htm#ae9f2c0d2a6bd0be19a12dba62f2277b2">packet_type_t</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>packet type enum </p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="a1c1b13fe89afd152373e6758762c5f7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c1b13fe89afd152373e6758762c5f7f">&#9670;&nbsp;</a></span>NodeFlag</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="lora_8h.htm#a1c1b13fe89afd152373e6758762c5f7f">NodeFlag</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>node flag enum </p>

<p class="definition">Definition at line <a class="el" href="lora_8h_source.htm#l00046">46</a> of file <a class="el" href="lora_8h_source.htm">lora.h</a>.</p>

</div>
</div>
<a id="a0a80a7bc045affcf10846075b88cbca0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a80a7bc045affcf10846075b88cbca0">&#9670;&nbsp;</a></span>PacketType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="lora_8h.htm#a0a80a7bc045affcf10846075b88cbca0">PacketType</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>packet type enum </p>

<p class="definition">Definition at line <a class="el" href="lora_8h_source.htm#l00029">29</a> of file <a class="el" href="lora_8h_source.htm">lora.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a id="a58d51aa671906dd8a4d90e5774b96624"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58d51aa671906dd8a4d90e5774b96624">&#9670;&nbsp;</a></span>link_assign()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void link_assign </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_link.htm">link_t</a> *&#160;</td>
          <td class="paramname"><em>link</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assign count number of nodes to a link via variable sized arguments </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">link</td><td>reference to link </td></tr>
    <tr><td class="paramname">count</td><td>number of nodes to connect </td></tr>
    <tr><td class="paramname">...</td><td>arguments to nodes </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00513">513</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a989284e478259382e177b5ed317c2e78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a989284e478259382e177b5ed317c2e78">&#9670;&nbsp;</a></span>link_assign_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void link_assign_ptr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_link.htm">link_t</a> *&#160;</td>
          <td class="paramname"><em>link</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_node.htm">node_t</a> **&#160;</td>
          <td class="paramname"><em>nodes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assign nodes to a link via ptr to node-ptr </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">link</td><td>reference to link </td></tr>
    <tr><td class="paramname">count</td><td>number of nodes to connect </td></tr>
    <tr><td class="paramname">nodes</td><td>pointer-to node-pointers </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00473">473</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a50d08e611d8db36e0cb995af18d1ae0b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a50d08e611d8db36e0cb995af18d1ae0b">&#9670;&nbsp;</a></span>link_assign_va()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void link_assign_va </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_link.htm">link_t</a> *&#160;</td>
          <td class="paramname"><em>link</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>assign nodes to a link via variable argument list of nodes </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">link</td><td>reference to link </td></tr>
    <tr><td class="paramname">count</td><td>number of nodes </td></tr>
    <tr><td class="paramname">args</td><td>va_list typed node-pointers </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00494">494</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="ab9bb62a5a3ea6f89d117122dd32b058d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9bb62a5a3ea6f89d117122dd32b058d">&#9670;&nbsp;</a></span>link_deliver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void link_deliver </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_link.htm">link_t</a> *&#160;</td>
          <td class="paramname"><em>link</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">packet_t *&#160;</td>
          <td class="paramname"><em>pkg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>causes link to publish packet to connected nodes called when link got a packet </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">link</td><td>reference to link </td></tr>
    <tr><td class="paramname">pkg</td><td>packet-reference to be delivered </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00452">452</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a090f66a52462c020295a54569d00ca7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a090f66a52462c020295a54569d00ca7a">&#9670;&nbsp;</a></span>link_make()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_link.htm">link_t</a>* link_make </td>
          <td>(</td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>latency</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>deviation</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>allocate and initialize link object with given latency and deviation </p>
<p>link related functions </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">latency</td><td>base latency level </td></tr>
    <tr><td class="paramname">deviation</td><td>deviation level</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>reference to created link </dd></dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00409">409</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a4ee19a53b6dbc425fd3fb038502c4503"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ee19a53b6dbc425fd3fb038502c4503">&#9670;&nbsp;</a></span>node_connect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void node_connect </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_node.htm">node_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>connect nodes via count number of links. you should have count number of links after count arg example: node_connect(node, 3, link1, link2, link3) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>reference to node </td></tr>
    <tr><td class="paramname">count</td><td>number of links </td></tr>
    <tr><td class="paramname">...</td><td>arguments to </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00386">386</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a243f0af1c62ebb32f4047df438e9d79b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a243f0af1c62ebb32f4047df438e9d79b">&#9670;&nbsp;</a></span>node_connect_ptr()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void node_connect_ptr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_node.htm">node_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="struct_link.htm">link_t</a> **&#160;</td>
          <td class="paramname"><em>links</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>connect nodes via count number of links </p>
<dl class="section note"><dt>Note</dt><dd>links must be pre-allocated beforehand this function uses ptr to link-ptr</dd></dl>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>reference to node </td></tr>
    <tr><td class="paramname">count</td><td>how many links to be added </td></tr>
    <tr><td class="paramname">links</td><td>actual references to those links (to pointers) </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00343">343</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="aa9a8ef3651fe28848dc7e1cb664fb9c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa9a8ef3651fe28848dc7e1cb664fb9c6">&#9670;&nbsp;</a></span>node_connect_va()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void node_connect_va </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_node.htm">node_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>count</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list&#160;</td>
          <td class="paramname"><em>args</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>connect nodes via count number of links links must be passed as a va_list typed variable argument list </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>reference to node </td></tr>
    <tr><td class="paramname">count</td><td>number of links </td></tr>
    <tr><td class="paramname">args</td><td>va_list that contains pointer-to links </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00366">366</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a39a257065dfbdebf8434ed81baf363a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39a257065dfbdebf8434ed81baf363a6">&#9670;&nbsp;</a></span>node_deliver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void node_deliver </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="struct_node.htm">node_t</a> *&#160;</td>
          <td class="paramname"><em>node</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">packet_t *&#160;</td>
          <td class="paramname"><em>pkg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>called when node receives packet from link </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">node</td><td>reference to node </td></tr>
    <tr><td class="paramname">pkg</td><td>reference to packet </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00306">306</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a93a53ad6e9c2925ccfd9bcabf895ba1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93a53ad6e9c2925ccfd9bcabf895ba1e">&#9670;&nbsp;</a></span>node_make()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="struct_node.htm">node_t</a>* node_make </td>
          <td>(</td>
          <td class="paramtype">const uint64_t&#160;</td>
          <td class="paramname"><em>id</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const bool&#160;</td>
          <td class="paramname"><em>internet</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>creates a 'node' which is a virtual device state </p>
<p>node related functions </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>64-bit identifier </td></tr>
    <tr><td class="paramname">internet</td><td>is node have internet (eg gateway)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>reference to created node </dd></dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00217">217</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a4b50acafcfc2f33c0ab0ddae127eb567"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b50acafcfc2f33c0ab0ddae127eb567">&#9670;&nbsp;</a></span>packet_getsum()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t packet_getsum </td>
          <td>(</td>
          <td class="paramtype">packet_t *&#160;</td>
          <td class="paramname"><em>pkg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>prepare packet for sending. this includes setting data it also calculates checksum </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pkg</td><td>packet to be prepared </td></tr>
    <tr><td class="paramname">length</td><td>length of data </td></tr>
    <tr><td class="paramname">data</td><td>pointer to data (will be copied)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>checksum of modified packet </dd></dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00164">164</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a14915245369a82c7a9239f2096c5b8e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14915245369a82c7a9239f2096c5b8e5">&#9670;&nbsp;</a></span>packet_make()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">packet_t* packet_make </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="lora_8h.htm#a9ebd1e228aedd29e18d3dffa6f49e75a">addr_t</a>&#160;</td>
          <td class="paramname"><em>src</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="lora_8h.htm#a9ebd1e228aedd29e18d3dffa6f49e75a">addr_t</a>&#160;</td>
          <td class="paramname"><em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="lora_8h.htm#ae9f2c0d2a6bd0be19a12dba62f2277b2">packet_type_t</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const uint16_t&#160;</td>
          <td class="paramname"><em>ttl</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>create a new packet. </p>
<p>packet related functions </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">src</td><td>source address </td></tr>
    <tr><td class="paramname">dst</td><td>destination address </td></tr>
    <tr><td class="paramname">type</td><td>flags of packet </td></tr>
    <tr><td class="paramname">ttl</td><td>time to live</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>reference to created packet </dd></dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00095">95</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a1fe9b1b67904ad7e2019cb3aa3214508"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1fe9b1b67904ad7e2019cb3aa3214508">&#9670;&nbsp;</a></span>packet_verify()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool packet_verify </td>
          <td>(</td>
          <td class="paramtype">packet_t *&#160;</td>
          <td class="paramname"><em>pkg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>check packet for validity </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pkg</td><td>packet to be validated</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>boolean, true = valid or false = invalid </dd></dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00195">195</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
<a id="a7e6dc200e1aeb204ea8bf141ff7d98c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7e6dc200e1aeb204ea8bf141ff7d98c2">&#9670;&nbsp;</a></span>print()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void print </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&#160;</td>
          <td class="paramname"><em>size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>prints given object according to its size uses switch statement to find out object type </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">obj</td><td>object-reference to be used </td></tr>
    <tr><td class="paramname">size</td><td>sizeof of object to determine its type </td></tr>
  </table>
  </dd>
</dl>

<p class="definition">Definition at line <a class="el" href="lora_8c_source.htm#l00530">530</a> of file <a class="el" href="lora_8c_source.htm">lora.c</a>.</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="lora_8h.htm">lora.h</a></li>
    <li class="footer">Generated by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.13 </li>
  </ul>
</div>
</body>
</html>
